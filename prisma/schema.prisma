generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Build {
  id               Int            @id @default(autoincrement())
  address          String?
  dong             String?
  ho               String?
  etc              String?
  isAddressPublic  AddressPublic? @default(public)
  mapLocation      String?
  propertyType     String?
  listingType      ListingType?   @relation(fields: [listingTypeId], references: [id], onDelete: SetNull)
  listingTypeId    Int?
  buyType          BuyType?       @relation(fields: [buyTypeId], references: [id], onDelete: SetNull)
  buyTypeId        Int?
  dealScope        String?
  visibility       Boolean?       @default(true)
  priceDisplay     String?
  salePrice        Int?
  actualEntryCost  Int?
  rentalPrice      Int?
  managementFee    Int?
  managementEtc    String?
  popularity       String?
  labelId          Int?
  label            Label?         @relation(fields: [labelId], references: [id], onDelete: SetNull)
  floorType        String?
  currentFloor     Int?
  totalFloors      Int?
  basementFloors   Int?
  floorDescription String?
  rooms            Int?
  bathrooms        Int?
  actualArea       Float?
  supplyArea       Float?
  landArea         Float?
  buildingArea     Float?
  totalArea        Float?
  themes           String[]       @default([])
  buildingOptions  BuildingOption[]
  constructionYear DateTime?
  permitDate       DateTime?
  approvalDate     DateTime?
  parkingPerUnit   Int?
  totalParking     Int?
  parkingFee       Int?
  parking          String[]       @default([])
  direction        String?
  directionBase    String?
  landUse          String?
  landType         String?
  buildingUse      String?
  staff            String?
  customerType     String?
  customerName     String?
  elevatorType     String?
  elevatorCount    Int?
  moveInType       String?
  moveInDate       DateTime?
  heatingType      String?
  yieldType        String?
  otherYield       String?
  contractEndDate  DateTime?
  buildingName     String?
  floorAreaRatio   String?
  otherUse         String?
  mainStructure    String?
  height           String?
  roofStructure    String?
  title            String?
  editorContent    String?
  secretNote       String?
  secretContact    String?
  mainImage        String?
  subImage         Json?
  adminImage       Json?
  createdAt        DateTime       @default(now())
  updatedAt        DateTime       @default(now()) @updatedAt
  deletedAt        DateTime?
  views            Int?           @default(0)
  confirmDate      DateTime?
}

model Contact {
  id                  Int      @id @default(autoincrement())
  customerText        String
  customerPhoneNumber String
  createdAt           DateTime @default(now())
  updatedAt           DateTime @default(now()) @updatedAt
}

model BoardPost {
  id                  Int       @id @default(autoincrement())
  title               String
  content             String?
  popupContent        String?
  representativeImage String?
  externalLink        String?
  registrationDate    DateTime?
  manager             String?
  isAnnouncement      Boolean   @default(false)
  isPopup             Boolean   @default(false)
  popupWidth          Int?
  popupHeight         Int?
  isPublished         Boolean   @default(true)
  views               Int       @default(0)
  createdAt           DateTime  @default(now())
  updatedAt           DateTime  @default(now()) @updatedAt
  deletedAt           DateTime?
}

// 테마 이미지 관리
model ThemeImage {
  id        Int      @id @default(autoincrement())
  label     String
  imageUrl  String
  imageName String?
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
  deletedAt DateTime?
}

model ListingType {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  imageUrl  String?
  imageName String?
  builds    Build[]
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

model BuildingOption {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  builds    Build[]
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

model Label {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  builds    Build[]
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

model BuyType {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  builds    Build[]
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

model ContactRequest {
  id          Int      @id @default(autoincrement())
  confirm     Boolean  @default(false)
  author      String
  contact     String
  ipAddress   String
  description String
  note        String?
  date        DateTime
  createdAt   DateTime @default(now())
  updatedAt   DateTime

  @@index([contact])
  @@index([date])
}

enum AddressPublic {
  public
  private
  exclude
}
